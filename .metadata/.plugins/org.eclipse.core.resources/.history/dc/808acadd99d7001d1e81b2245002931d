package com.example.demo.Controller;

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import com.example.demo.Entity.User;
import com.example.demo.Service.UserService;

@RestController
public class UserController {
	
	
	@Autowired
	 private UserService userService; 
	
	@PostMapping("/users")
	public ResponseEntity<String> addUser(@Valid @RequestBody User user){
		userService.addUser(user);
		return ResponseEntity.ok("User is valid");
	
	}
	@ResponseStatus(HttpStatus.BAD_REQUEST)
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public  Map<String,String> handleValidationExceptions(MethodArgumentNotValidException ex){
      
		Map<String,String>errors= new HashMap<>();
		ex.getBindingResult().getAllErrors().stream().forEach((error)->{
			String fieldName=((FieldError)error).getField();
			String errorMessage = error.getDefaultMessage();
			errors.put(fieldName, errorMessage);
		});
		return errors;

	}
	
	
	

}
